"""
Вам уже приходилось писать таблицу умножения. Но на этот раз вас попросили сделать в плюс к таблице умножения ещё и таблицу сложения, а также таблицу возведения в степень.
Чтобы не копировать один и тот же код и обобщить все три функции до единой функции рисования таблиц (бинарных) арифметических операций,
напишите функцию print_operation_table(operation, num_rows=9, num_columns=9),
которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
Нумерация строк и столбцов идёт с единицы (подумайте, почему не с нуля).

Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.
    Пример 1
        Ввод: print_operation_table(lambda x, y: x * y)
        Вывод: см картинку

    Пример 2
        Ввод: print_operation_table(lambda x, y: x * y, 5)
        Вывод: см картинку
"""

def print_operation_table(operation, rows=9, columns=9):
    for i in range(1, rows + 1):
        for j in range(1, columns + 1):
            if i > 1 and j > 1:
                print(operation(i, j), end='\t')
            else:
                print(i * j, end='\t')
        print()
print_operation_table(lambda x, y: x * y, 5,5)