""" Самая далёкая планета

    Ограничение времени 1 секунда
    Ограничение памяти 64Mb
    Ввод стандартный ввод или input.txt
    Вывод стандартный вывод или output.txt

Планеты вращаются вокруг звезд по эллиптическим орбитам. Назовём самой далёкой планетой ту, орбита которой имеет самую большую площадь.
Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит планет найдет ту, по которой вращается самая далёкая планета.
Круговые орбиты не учитывайте: вы знаете, что у вашей звезды таких планет нет, зато искусственные спутники были запущены на круговые орбиты.
Результатом функции должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далёкой планеты.
Каждая орбита представляет из себя кортеж из пары чисел - полуосей её эллипса. Площадь эллипса вычисляется по формуле S = π*а*b, где а и b - длины полуосей эллипса.
При решении задачи используйте списочные выражения.
Подсказка: проще всего будет найти эллипс в два шага: сначала вычислить самую большую площадь эллипса, а затем найти и сам эллипс, имеющий такую площадь.
Гарантируется, что самая далёкая планета ровно одна.



    Пример
        Ввод
            orbits = [(1, 3), (2.5, 10), (7, 2), (6, 7), (4, 3)]
            print(*find_farthest_orbit(orbits))

        Вывод
        2.5, 10
"""

def find_farthest_orbit(orbits):
    π = 3.141
    list = []
    result = ()
    for i in orbits:
        a, b = i
        if a != b:
             list.append(a)
             list.append(b)
    s = [π * list[i] * list[i + 1] for i in range(0, len(list), 2)]
    S_max = s[0]
    for i in s:
        if i > S_max:
            S_max = i
    for i in range(0, len(list), 2):
        if π * list[i] * list[i + 1] == S_max:
            result = list[i], list[i + 1]
    return result


orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
print(*find_farthest_orbit(orbits))